[{"E:\\WEB\\Projects\\react\\contacts\\src\\index.tsx":"1","E:\\WEB\\Projects\\react\\contacts\\src\\reportWebVitals.ts":"2","E:\\WEB\\Projects\\react\\contacts\\src\\i18n.ts":"3","E:\\WEB\\Projects\\react\\contacts\\src\\App.tsx":"4","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\About.tsx":"5","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Info.tsx":"6","E:\\WEB\\Projects\\react\\contacts\\src\\store\\index.ts":"7","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\index.tsx":"8","E:\\WEB\\Projects\\react\\contacts\\src\\components\\NavBar\\index.tsx":"9","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledP.ts":"10","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledH2.ts":"11","E:\\WEB\\Projects\\react\\contacts\\src\\store\\contacts.ts":"12","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\constants.ts":"13","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\useDataViewMode.ts":"14","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledNavLan.ts":"15","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledLanSwitch.ts":"16","E:\\WEB\\Projects\\react\\contacts\\src\\components\\Search\\index.tsx":"17","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\ContactsTable\\index.tsx":"18","E:\\WEB\\Projects\\react\\contacts\\src\\components\\Pagination\\index.tsx":"19","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledPaginationItem.ts":"20","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledPaginationWrapper.ts":"21","E:\\WEB\\Projects\\react\\contacts\\src\\constants\\nationalities.ts":"22","E:\\WEB\\Projects\\react\\contacts\\src\\components\\CopyToClipboard\\index.tsx":"23","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\ToggleDataViewMode\\index.tsx":"24","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledH3.ts":"25","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledText.ts":"26","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledTextarea.ts":"27","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledForm.ts":"28","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledSubmit.ts":"29","E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledEmail.ts":"30","E:\\WEB\\Projects\\react\\contacts\\src\\components\\Selectors\\index.ts":"31","E:\\WEB\\Projects\\react\\contacts\\src\\pages\\ErrorPage.tsx":"32"},{"size":926,"mtime":1624911881621,"results":"33","hashOfConfig":"34"},{"size":451,"mtime":1620936746994,"results":"35","hashOfConfig":"34"},{"size":583,"mtime":1624911881621,"results":"36","hashOfConfig":"34"},{"size":871,"mtime":1627552357728,"results":"37","hashOfConfig":"34"},{"size":4547,"mtime":1624914429832,"results":"38","hashOfConfig":"34"},{"size":2273,"mtime":1627552357732,"results":"39","hashOfConfig":"34"},{"size":473,"mtime":1621703582721,"results":"40","hashOfConfig":"34"},{"size":2858,"mtime":1627552357731,"results":"41","hashOfConfig":"34"},{"size":2992,"mtime":1627552303726,"results":"42","hashOfConfig":"34"},{"size":99,"mtime":1624481500266,"results":"43","hashOfConfig":"34"},{"size":380,"mtime":1624481500265,"results":"44","hashOfConfig":"34"},{"size":2041,"mtime":1627552461754,"results":"45","hashOfConfig":"34"},{"size":76,"mtime":1620936746992,"results":"46","hashOfConfig":"34"},{"size":499,"mtime":1621456019099,"results":"47","hashOfConfig":"34"},{"size":569,"mtime":1627552303756,"results":"48","hashOfConfig":"34"},{"size":486,"mtime":1624911881541,"results":"49","hashOfConfig":"34"},{"size":797,"mtime":1624911881539,"results":"50","hashOfConfig":"34"},{"size":3864,"mtime":1627552357729,"results":"51","hashOfConfig":"34"},{"size":1688,"mtime":1627552303741,"results":"52","hashOfConfig":"34"},{"size":182,"mtime":1624481500266,"results":"53","hashOfConfig":"34"},{"size":118,"mtime":1624481500267,"results":"54","hashOfConfig":"34"},{"size":557,"mtime":1621453505554,"results":"55","hashOfConfig":"34"},{"size":1448,"mtime":1621454450635,"results":"56","hashOfConfig":"34"},{"size":1433,"mtime":1627552357730,"results":"57","hashOfConfig":"34"},{"size":308,"mtime":1624481500265,"results":"58","hashOfConfig":"34"},{"size":487,"mtime":1624481500267,"results":"59","hashOfConfig":"34"},{"size":516,"mtime":1624481500268,"results":"60","hashOfConfig":"34"},{"size":170,"mtime":1624481500265,"results":"61","hashOfConfig":"34"},{"size":405,"mtime":1624481500267,"results":"62","hashOfConfig":"34"},{"size":467,"mtime":1624914207736,"results":"63","hashOfConfig":"34"},{"size":1206,"mtime":1627552303742,"results":"64","hashOfConfig":"34"},{"size":454,"mtime":1627552357731,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1qnf3qx",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\WEB\\Projects\\react\\contacts\\src\\index.tsx",["135"],"import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport './i18n';\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport styled, {createGlobalStyle} from \"styled-components\";\r\n\r\nconst Global = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n  }\r\n  a:hover {\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Global />\r\n      <Suspense fallback={\"loading\"}>\r\n        <App />\r\n      </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(undefined);\r\n",["136","137"],"E:\\WEB\\Projects\\react\\contacts\\src\\reportWebVitals.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\i18n.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\App.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\About.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Info.tsx",["138"],"import React from 'react'\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {StyledH2} from \"../components/ui/StyledH2\";\r\nimport {StyledP} from \"../components/ui/StyledP\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport const Info: React.FC = () => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <StyledH2>\r\n                {t(\"headers.info\")}\r\n            </StyledH2>\r\n            <StyledP>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae culpa esse iste iure nam nostrum saepe sint ullam? Deserunt dignissimos ducimus iste molestias non!\r\n                Adipisci culpa cupiditate distinctio dolorem, dolorum esse exercitationem laboriosam mollitia necessitatibus perspiciatis placeat possimus quaerat sequi ullam\r\n                voluptate? Cumque dolorum earum eligendi error harum mollitia temporibus veniam. Architecto asperiores atque blanditiis consequuntur corporis culpa cupiditate\r\n                dignissimos dolore doloribus expedita facere fuga fugiat fugit harum id impedit, incidunt itaque libero magnam magni molestiae mollitia nulla numquam obcaecati\r\n                odio provident quae quas qui quia, quisquam quod recusandae rem sed similique soluta ut voluptatum? Molestiae neque sequi temporibus totam!\r\n            </StyledP>\r\n            <StyledP>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae culpa esse iste iure nam nostrum saepe sint ullam? Deserunt dignissimos ducimus iste molestias non!\r\n                Adipisci culpa cupiditate distinctio dolorem, dolorum esse exercitationem laboriosam mollitia necessitatibus perspiciatis placeat possimus quaerat sequi ullam\r\n                voluptate? Cumque dolorum earum eligendi error harum mollitia temporibus veniam. Architecto asperiores atque blanditiis consequuntur corporis culpa cupiditate\r\n                dignissimos dolore doloribus expedita facere fuga fugiat fugit harum id impedit, incidunt itaque libero magnam magni molestiae mollitia nulla numquam obcaecati\r\n                odio provident quae quas qui quia, quisquam quod recusandae rem sed similique soluta ut voluptatum? Molestiae neque sequi temporibus totam!\r\n            </StyledP>\r\n        </Container>\r\n    )\r\n}","E:\\WEB\\Projects\\react\\contacts\\src\\store\\index.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\index.tsx",["139","140","141"],"import React, { useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ContactsTable } from \"./ContactsTable\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { DATA_VIEW_MODES } from \"./constants\";\r\nimport { useDataViewMode } from \"./useDataViewMode\";\r\n\r\nimport { Pagination } from \"../../components/Pagination\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setContactsInitial } from \"../../store/contacts\";\r\nimport { Search } from \"../../components/Search\";\r\nimport { RootState } from \"../../store\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    headContainer: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport const Contacts = () => {\r\n\r\n  const classes = useStyles();\r\n  const isLoading = useSelector((state: RootState) => state.toolkit.isLoading);\r\n  const isError = useSelector((state: RootState) => state.toolkit.isError);\r\n  const [dataViewMode, setDataViewMode] = useDataViewMode();\r\n\r\n  console.log(\"Contacts dataViewMode\", dataViewMode)\r\n\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setContactsInitial());\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Search />\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n          {(() => {\r\n            if (isLoading) {\r\n              return (\r\n                <CircularProgress variant=\"determinate\"></CircularProgress>\r\n              );\r\n            }\r\n            if (isError)\r\n              return <div data-testid=\"contacts-error\">Error...</div>;\r\n\r\n            if (dataViewMode === DATA_VIEW_MODES.TABLE)\r\n              return (\r\n                <>\r\n                    <div data-testid=\"table-container\">{dataViewMode}</div>\r\n                  <ContactsTable />\r\n                  <Pagination />\r\n                </>\r\n              );\r\n            if (dataViewMode === DATA_VIEW_MODES.GRID)\r\n              return (\r\n                  <>\r\n                      <div data-testid=\"grid-container\">{dataViewMode}</div>\r\n                      <ContactsTable />\r\n                      <Pagination />\r\n                  </>\r\n              );\r\n              return null;\r\n          })()}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","E:\\WEB\\Projects\\react\\contacts\\src\\components\\NavBar\\index.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledP.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledH2.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\store\\contacts.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\constants.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\useDataViewMode.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledNavLan.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledLanSwitch.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\Search\\index.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\ContactsTable\\index.tsx",["142"],"import { format } from \"date-fns\";\r\nimport parseISO from \"date-fns/parseISO\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { CopyToClipboard } from \"../../../components/CopyToClipboard\";\r\nimport { NATIONALITIES_HUMAN_NAME } from \"../../../constants/nationalities\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentContacts } from \"../../../components/Selectors\";\r\nimport {ToggleDataViewMode} from \"../ToggleDataViewMode\";\r\nimport {useDataViewMode} from \"../useDataViewMode\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport const ContactsTable = () => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const classes = useStyles();\r\n  const contactList = useSelector(getCurrentContacts);\r\n  const [dataViewMode, setDataViewMode] = useDataViewMode();\r\n  return (\r\n    <TableContainer component={Paper} data-testid=\"table-container\">\r\n\r\n      <ToggleDataViewMode\r\n          dataViewMode={dataViewMode}\r\n          setDataViewMode={setDataViewMode}\r\n      />\r\n\r\n      <Table className={classes.table} aria-label=\"contacts table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{t(\"contacts.table.headers.avatar\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.full name\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.birthday\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.email\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.phone\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.location\")}</TableCell>\r\n            <TableCell>{t(\"contacts.table.headers.nationality\")}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {contactList.map((contact) => (\r\n            <TableRow key={contact.login.uuid}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Avatar\r\n                  alt={\r\n                    contact.name.title +\r\n                    \" \" +\r\n                    contact.name.first +\r\n                    \" \" +\r\n                    contact.name.last\r\n                  }\r\n                  src={contact.picture.thumbnail}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                {contact.name.title +\r\n                  \" \" +\r\n                  contact.name.first +\r\n                  \" \" +\r\n                  contact.name.last}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>\r\n                  {format(parseISO(contact.dob.date), \"MM/dd/yyyy\")}\r\n                </Typography>\r\n                <Typography>{contact.dob.age} years</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <CopyToClipboard text={contact.email} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <CopyToClipboard text={contact.phone} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <CopyToClipboard text={\"/\" + contact.location.country + \"/\"} />\r\n                <Typography>\r\n                  {contact.location.city}, {contact.location.street.name}{\" \"}\r\n                  {contact.location.street.number}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>{NATIONALITIES_HUMAN_NAME[contact.nat]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","E:\\WEB\\Projects\\react\\contacts\\src\\components\\Pagination\\index.tsx",["143"],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledPaginationItem.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledPaginationWrapper.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\constants\\nationalities.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\CopyToClipboard\\index.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\Contacts\\ToggleDataViewMode\\index.tsx",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledH3.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledText.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledTextarea.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledForm.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledSubmit.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\ui\\StyledEmail.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\components\\Selectors\\index.ts",[],"E:\\WEB\\Projects\\react\\contacts\\src\\pages\\ErrorPage.tsx",[],{"ruleId":"144","severity":1,"message":"145","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"144","severity":1,"message":"152","line":9,"column":16,"nodeType":"146","messageId":"147","endLine":9,"endColumn":20},{"ruleId":"144","severity":1,"message":"153","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":28},{"ruleId":"144","severity":1,"message":"154","line":33,"column":24,"nodeType":"146","messageId":"147","endLine":33,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":40,"column":6,"nodeType":"157","endLine":40,"endColumn":8,"suggestions":"158"},{"ruleId":"144","severity":1,"message":"152","line":30,"column":14,"nodeType":"146","messageId":"147","endLine":30,"endColumn":18},{"ruleId":"155","severity":1,"message":"159","line":24,"column":5,"nodeType":"157","endLine":24,"endColumn":7,"suggestions":"160"},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'i18n' is assigned a value but never used.","'useCallback' is defined but never used.","'setDataViewMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},{"range":"170","text":"169"},[1354,1356],"[dispatch]",[893,895]]